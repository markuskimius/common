#!/usr/bin/env bash

##############################################################################
# COMMON: Unix utilities
# https://github.com/markuskimius/common
#
# Copyright (c)2020-2021 Mark Kim
# Released under GNU General Public License version 2.
# https://github.com/markuskimius/common/blob/main/LICENSE
##############################################################################

function usage() {
    cat <<EOF
Usage: ${SCRIPTNAME} [OPTIONS] COMMAND [ARGUMENTS]

OPTIONS:
  -q                    Suppress verbosity.

COMMAND may be one of:
$(
    for name in $(common-cfg "$CONFIG" | jq -r ".commands | keys[]"); do
        echo "  $name"
    done
)

FILES:
  ${CONFIG}
                        Command configuration file.

EOF
}


##############################################################################
# PROGRAM BEGINS HERE

SCRIPTNAME=$(basename "${BASH_SOURCE}")
CONFIG="common.json"


function main() {
    local OPTARG OPTIND OPTERR opt
    local name command=()
    local isok=1

    # Process options
    while getopts "qh" opt; do
        case "$opt" in
            q)  LOGGER_ENABLE= ;;
            h)  usage && exit  ;;
            *)  isok=0
        esac
    done

    # Optionless arguments
    name=${1-} && shift

    # Grab the command
    IFS=$'\002' read -ra command <<<$(
        common-cfg "$CONFIG" \
        | jq -j "$(printf '.commands."%s".command[]//"" | . , "\u0002"' "$name")" 2>/dev/null
    )

    # Sanity check
    [[ -z "$name" ]] && echo "Must specify COMMAND" 1>&2 && isok=0
    (( ! ${#command[@]} )) && echo "${name}: Invalid COMMAND" 1>&2 && isok=0

    if (( ! isok )); then
        usage 1>&2
        exit 1
    fi

    # Execute the command
    exec "${command[@]}" "$@"
}


##############################################################################
# ENTRY POINT

main "$@"
