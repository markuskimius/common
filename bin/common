#!/usr/bin/env bash

##############################################################################
# COMMON: Unix utilities
# https://github.com/markuskimius/common
#
# Copyright (c)2020-2021 Mark Kim
# Released under GNU General Public License version 2.
# https://github.com/markuskimius/common/blob/main/LICENSE
##############################################################################

function usage() {
    cat <<EOF
Usage: ${SCRIPTNAME} [OPTIONS] COMMAND [ARGUMENTS]

OPTIONS:
  -c CONFIG             Read alternate CONFIG file.
  -q                    Suppress verbosity.

COMMAND may be one of:
  help COMMAND          Show help for COMMAND.

$(
    format="  %-21s %s"
    lines=()

    while IFS=$'\002' read -d $'\000' -r name desc; do
        IFS=$'\n' read -d '' -ra lines <<<"$desc"

        for line in "${lines[@]}"; do
            printf "${format}\n" "$name" "$line"
            name=""
        done

        printf "\n"
    done < <(common-cfg "$CONFIG" | jq -j '
        .commands | to_entries[] | .key, "\u0002", (
            .value.description//[] | .[] | ., "\u000a"
        ), "\u0000"' 2>/dev/null
    )
)

FILES:
  ${CONFIG}
                        Command configuration file.

EOF
}


##############################################################################
# PROGRAM BEGINS HERE

SCRIPTNAME=${BASH_SOURCE##*/}
CONFIG="${SCRIPTNAME}.json"


function main() {
    local OPTARG OPTIND OPTERR opt
    local name selector="command" command=()
    local isok=1

    # Process options
    while getopts "c:qh" opt; do
        case "$opt" in
            c)  CONFIG=$OPTARG ;;
            q)  LOGGER_ENABLE= ;;
            h)  usage && exit  ;;
            *)  isok=0
        esac
    done
    shift $((OPTIND-1))

    # Optionless arguments
    name=${1-} && shift

    if [[ "$name" == "help" ]]; then
        selector="help"
        name=${1-} && shift

        [[ -z "$name" ]] && usage && exit
    fi

    # Grab the command
    IFS=$'\002' read -ra command <<<$(
        common-cfg "$CONFIG" \
        | jq -j "$(printf '.commands."%s".%s[]//"" | . , "\u0002"' "$name" "$selector")" 2>/dev/null
    )

    # Sanity check
    [[ -z "$name" ]] && echo "Must specify COMMAND" 1>&2 && isok=0
    [[ -n "$name" ]] && (( ! ${#command[@]} )) && echo "${name}: Invalid COMMAND" 1>&2 && isok=0

    if (( ! isok )); then
        usage 1>&2
        exit 1
    fi

    # Execute the command
    exec "${command[@]}" "$@"
}


##############################################################################
# ENTRY POINT

main "$@"
